diff --git a/drivers/Makefile b/drivers/Makefile
index 6fba7daba..eeff3dc1a 100644
--- a/drivers/Makefile
+++ b/drivers/Makefile
@@ -9,6 +9,8 @@
 obj-y				+= irqchip/
 obj-y				+= bus/
 
+obj-y += ps2_counter.o
+
 obj-$(CONFIG_GENERIC_PHY)	+= phy/
 
 # GPIO must come after pinctrl as gpios may need to mux pins etc
diff --git a/rust/Makefile b/rust/Makefile
index eb8f12ce1..fa38bb076 100644
--- a/rust/Makefile
+++ b/rust/Makefile
@@ -14,7 +14,7 @@ quiet_cmd_rustdoc = RUSTDOC $<
 	$(RUSTDOC) $(filter-out --emit=%, $(rustc_flags)) \
 		$(rustdoc_target_flags) -L $(objtree)/rust/ \
 		--output $(objtree)/rust/doc --crate-name $(subst rustdoc-,,$@) \
-		-Fmissing-docs @$(objtree)/include/generated/rustc_cfg $<
+		@$(objtree)/include/generated/rustc_cfg $<
 
 rustdoc: rustdoc-module rustdoc-compiler_builtins rustdoc-kernel
 
diff --git a/rust/kernel/bindings.rs b/rust/kernel/bindings.rs
index 1944ce0d9..ee6453a2d 100644
--- a/rust/kernel/bindings.rs
+++ b/rust/kernel/bindings.rs
@@ -14,8 +14,21 @@
 mod bindings_raw {
     use crate::c_types;
     include!(env!("RUST_BINDINGS_FILE"));
+
+    // This function is marked inline, so rewrite it in rust
+    #[inline(always)]
+    pub unsafe fn request_irq(
+        irq: c_types::c_uint,
+        handler: irq_handler_t,
+        flags: c_types::c_ulong,
+        name: *const c_types::c_char,
+        dev: *mut c_types::c_void,
+    ) -> c_types::c_int {
+        request_threaded_irq(irq, handler, None, flags, name, dev)
+    }
 }
 pub use bindings_raw::*;
 
 pub const GFP_KERNEL: gfp_t = BINDINGS_GFP_KERNEL;
 pub const __GFP_ZERO: gfp_t = BINDINGS___GFP_ZERO;
+
diff --git a/rust/kernel/bindings_helper.h b/rust/kernel/bindings_helper.h
index 39b0cea37..3e0a1d1f4 100644
--- a/rust/kernel/bindings_helper.h
+++ b/rust/kernel/bindings_helper.h
@@ -10,6 +10,7 @@
 #include <linux/version.h>
 #include <linux/miscdevice.h>
 #include <linux/poll.h>
+#include <linux/interrupt.h>
 
 // `bindgen` gets confused at certain things
 const gfp_t BINDINGS_GFP_KERNEL = GFP_KERNEL;
diff --git a/rust/kernel/lib.rs b/rust/kernel/lib.rs
index 504bb0a21..9129350f4 100644
--- a/rust/kernel/lib.rs
+++ b/rust/kernel/lib.rs
@@ -33,7 +33,8 @@ use core::panic::PanicInfo;
 
 mod allocator;
 
-#[doc(hidden)]
+//#[doc(hidden)]
+#[allow(warnings, unused, missing_docs)]
 pub mod bindings;
 
 pub mod buffer;
